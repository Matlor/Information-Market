type QuestionStatusEnum = variant {
    CREATED;
    OPEN;
    PICKANSWER;
    DISPUTABLE;
    DISPUTED;
    CLOSED;
};

type InvoiceType = record {
    id: text;
    buyer: text;
};

type QuestionType = record {
    id: text;
    author: text;
    author_invoice: InvoiceType;
    creation_date: int32;
    status: QuestionStatusEnum;
    status_update_date: int32;
    content: text;
    reward: int32;
    dispute: opt DisputeType;
    winner: opt AnswerType;
    winner_invoice: opt InvoiceType;
};

type AnswerType = record {
    id: text;
    author: text;
    creation_date: int32;
    content: text;
};

type DisputeType = record {
    id: text;
    creation_date: int32;
};

service : {
    "graphql_query": (text, text) -> (text) query;
    "graphql_mutation": (text, text) -> (text);
    "create_invoice": (text, text) -> (opt InvoiceType);
    "create_question": (text, text, int32, QuestionStatusEnum, int32, text, int32) -> (opt QuestionType);
    "create_answer": (text, text, int32, text) -> (opt AnswerType);
    "create_dispute": (text, int32) -> (opt DisputeType);
    "set_winner": (text, text) -> (bool);
    "set_winner_invoice": (text, text) -> (bool);
    "get_invoice": (text) -> (opt InvoiceType) query;
    "get_question": (text) -> (opt QuestionType) query;
    "get_question_by_invoice": (text) -> (opt QuestionType) query;
    "get_answer": (text) -> (opt AnswerType) query;
    "has_answered": (text, text) -> (bool) query;
}
